sources:
    osm: 
        type: TopoJSON
        url: https://tile.dev.mapzen.com/mapzen/vector/v1/all/{z}/{x}/{y}.topojson
        max_zoom: 16
        rasters: [normals]
    normals:
        type: Raster
        url: https://terrain-preview.mapzen.com/normal/{z}/{x}/{y}.png
        max_zoom: 15
scene:
    background:
        color: white
textures:
    spheremap:
        element: "#kcanvas"

styles: 
    hillshade:
        base: polygons
        raster: normal
        shaders:
            uniforms:
                u_scale: .5
                u_envmap: spheremap
            blocks:
                global: |
                    // Simplified view-independent environment map
                    vec4 applyEnvmap (in sampler2D _tex, in vec3 _normal) {
                        const vec3 eye = vec3(0.,0.,-1.);
                        vec3 r = reflect(eye, _normal);
                        r.z += 1.0;
                        float m = 2. * length(r);
                        vec2 uv = r.xy / m + .5;
                        return texture2D(_tex, uv);
                    }
                color: |
                    normal.z *= u_scale;
                    normal = normalize(normal);
                    color = applyEnvmap(u_envmap, normal);

layers:
    earth:
        data: { source: osm }
        draw:
            hillshade:
                order: 0
            lines:
                order: 2
                color: [.3, .3, .3]
                width: 1px
    water:
        data: { source: osm }
        not-ocean:
            filter: { not: { kind: ocean} }
            draw:
                lines:
                    order: 3
                    color: [.3, .3, .3]
                    width: .5px
    roads:
        data: { source: osm }
        filter: { not: { kind: ferry } }
        draw:
            lines:
                order: 3
                color: [.3, .3, .3]
                width: .3px
